// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesManagement_SysDev;

#nullable disable

namespace SalesManagement_SysDev.Migrations
{
    [DbContext(typeof(SalesManagementContext))]
    [Migration("20241126084932_CreateNyuukoCheckerTable")]
    partial class CreateNyuukoCheckerTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesManagement_SysDev.Entity.LoginHistoryLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit")
                        .HasColumnName("IsSuccessful");

                    b.Property<DateTime>("LoginDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("LoginDateTime");

                    b.Property<string>("LoginID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoginID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Password");

                    b.HasKey("ID")
                        .HasName("PK_LoginHistoryLog");

                    b.ToTable("LoginHistoryLog", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.Entity.LoginHistoryLogDetail", b =>
                {
                    b.Property<int>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetailID"));

                    b.Property<DateTime>("AcceptDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Display")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<int>("LogID")
                        .HasColumnType("int");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailID");

                    b.HasIndex("ID");

                    b.ToTable("LoginHistoryLogDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.Entity.LoginHistroyLog2", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("LoginDateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("LoginDateTime");

                    b.Property<string>("LoginID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LoginID");

                    b.Property<string>("ShainName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShainName");

                    b.HasKey("ID")
                        .HasName("PK_LoginHistoryLog2");

                    b.ToTable("LoginHistoryLog2", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.Entity.NyuukoChecker", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<bool>("DelFlag")
                        .HasColumnType("bit");

                    b.Property<bool>("Flag")
                        .HasColumnType("bit");

                    b.Property<string>("JyutyuID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SyukkoID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NyuukoCheckers");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MClient", b =>
                {
                    b.Property<int>("ClID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClID"));

                    b.Property<string>("ClAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClFax")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ClFAX");

                    b.Property<int>("ClFlag")
                        .HasColumnType("int");

                    b.Property<string>("ClHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("ClPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("ClID")
                        .HasName("PK__M_Client__B1FCF8D58C35E4D2");

                    b.HasIndex("SoID");

                    b.ToTable("M_Client", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MEmployee", b =>
                {
                    b.Property<int>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("EmFlag")
                        .HasColumnType("int");

                    b.Property<string>("EmHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EmHiredate")
                        .HasColumnType("date");

                    b.Property<string>("EmName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmPassword")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("PoID")
                        .HasColumnType("int")
                        .HasColumnName("PoID");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("EmID")
                        .HasName("PK__M_Employ__DCB5BEC24482B998");

                    b.HasIndex("PoID");

                    b.HasIndex("SoID");

                    b.ToTable("M_Employee", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MMajorClassification", b =>
                {
                    b.Property<int>("McID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("McID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("McID"));

                    b.Property<int>("McFlag")
                        .HasColumnType("int");

                    b.Property<string>("McHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("McName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("McID")
                        .HasName("PK__M_MajorC__27B1E232B6CE2E6D");

                    b.ToTable("M_MajorClassification", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MMaker", b =>
                {
                    b.Property<int>("MaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaID"));

                    b.Property<string>("MaAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaFax")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("MaFAX");

                    b.Property<int>("MaFlag")
                        .HasColumnType("int");

                    b.Property<string>("MaHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("MaPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("MaID")
                        .HasName("PK__M_Maker__2725BF40FEBFC979");

                    b.ToTable("M_Maker", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MPosition", b =>
                {
                    b.Property<int>("PoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PoID"));

                    b.Property<int>("PoFlag")
                        .HasColumnType("int");

                    b.Property<string>("PoHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PoID")
                        .HasName("PK__M_Positi__A4C01F9E8A03A2CA");

                    b.ToTable("M_Position", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MProduct", b =>
                {
                    b.Property<int>("PrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrID"));

                    b.Property<int>("MaID")
                        .HasColumnType("int")
                        .HasColumnName("MaID");

                    b.Property<string>("PrColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("PrFlag")
                        .HasColumnType("int");

                    b.Property<string>("PrHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrJcode")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("PrJCode");

                    b.Property<string>("PrModelNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PrName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("PrReleaseDate")
                        .HasColumnType("date");

                    b.Property<int>("PrSafetyStock")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(9, 0)");

                    b.Property<int>("ScID")
                        .HasColumnType("int")
                        .HasColumnName("ScID");

                    b.HasKey("PrID")
                        .HasName("PK__M_Produc__A5021A4FEB48A98E");

                    b.HasIndex("MaID");

                    b.HasIndex("ScID");

                    b.ToTable("M_Product", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MSalesOffice", b =>
                {
                    b.Property<int>("SoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SoID"));

                    b.Property<string>("SoAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoFax")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("SoFAX");

                    b.Property<int>("SoFlag")
                        .HasColumnType("int");

                    b.Property<string>("SoHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SoPhone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("SoPostal")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.HasKey("SoID")
                        .HasName("PK__M_SalesO__BC3C9374243FA851");

                    b.ToTable("M_SalesOffice", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.MSmallClassification", b =>
                {
                    b.Property<int>("ScID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScID"));

                    b.Property<int>("McID")
                        .HasColumnType("int")
                        .HasColumnName("McID");

                    b.Property<int>("ScFlag")
                        .HasColumnType("int");

                    b.Property<string>("ScHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ScID")
                        .HasName("PK__M_SmallC__ACB791BA805D9A7F");

                    b.HasIndex("McID");

                    b.ToTable("M_SmallClassification", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TArrival", b =>
                {
                    b.Property<int>("ArID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArID"));

                    b.Property<DateTime?>("ArDate")
                        .HasColumnType("date");

                    b.Property<int>("ArFlag")
                        .HasColumnType("int");

                    b.Property<string>("ArHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArStateFlag")
                        .HasColumnType("int");

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int?>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("ArID");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("OrID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Arrival", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TArrivalDetail", b =>
                {
                    b.Property<int>("ArDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArDetailID"));

                    b.Property<int?>("ArID")
                        .HasColumnType("int")
                        .HasColumnName("ArID");

                    b.Property<int?>("ArQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.HasKey("ArDetailID");

                    b.HasIndex("ArID");

                    b.HasIndex("PrID");

                    b.ToTable("T_ArrivalDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TChumon", b =>
                {
                    b.Property<int>("ChID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChID"));

                    b.Property<DateTime?>("ChDate")
                        .HasColumnType("date");

                    b.Property<int>("ChFlag")
                        .HasColumnType("int");

                    b.Property<string>("ChHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChStateFlag")
                        .HasColumnType("int");

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int?>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("ChID")
                        .HasName("PK__T_Chumon__AF02F0B8EDF28122");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("OrID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Chumon", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TChumonDetail", b =>
                {
                    b.Property<int>("ChDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChDetailID"));

                    b.Property<int>("ChID")
                        .HasColumnType("int")
                        .HasColumnName("ChID");

                    b.Property<int>("ChQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.HasKey("ChDetailID");

                    b.HasIndex("ChID");

                    b.HasIndex("PrID");

                    b.ToTable("T_ChumonDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.THattyu", b =>
                {
                    b.Property<int>("HaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HaID"));

                    b.Property<int>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<DateTime>("HaDate")
                        .HasColumnType("date");

                    b.Property<int>("HaFlag")
                        .HasColumnType("int");

                    b.Property<string>("HaHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaID")
                        .HasColumnType("int")
                        .HasColumnName("MaID");

                    b.Property<int?>("WaWarehouseFlag")
                        .HasColumnType("int");

                    b.HasKey("HaID");

                    b.HasIndex("EmID");

                    b.HasIndex("MaID");

                    b.ToTable("T_Hattyu", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.THattyuDetail", b =>
                {
                    b.Property<int>("HaDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HaDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HaDetailID"));

                    b.Property<int>("HaID")
                        .HasColumnType("int")
                        .HasColumnName("HaID");

                    b.Property<int>("HaQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.HasKey("HaDetailID");

                    b.HasIndex("HaID");

                    b.HasIndex("PrID");

                    b.ToTable("T_HattyuDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TOrder", b =>
                {
                    b.Property<int>("OrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrID"));

                    b.Property<string>("ClCharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<DateTime>("OrDate")
                        .HasColumnType("date");

                    b.Property<int>("OrFlag")
                        .HasColumnType("int");

                    b.Property<string>("OrHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrStateFlag")
                        .HasColumnType("int");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("OrID")
                        .HasName("PK__T_Order__E1649648FAE4D6E9");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Order", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TOrderDetail", b =>
                {
                    b.Property<int>("OrDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrDetailID"));

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<int>("OrQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("OrTotalPrice")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.HasKey("OrDetailID")
                        .HasName("PK__T_OrderD__45EDE90EEC5B2390");

                    b.HasIndex("OrID");

                    b.HasIndex("PrID");

                    b.ToTable("T_OrderDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSale", b =>
                {
                    b.Property<int>("SaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaID"));

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<DateTime>("SaDate")
                        .HasColumnType("date");

                    b.Property<int>("SaFlag")
                        .HasColumnType("int");

                    b.Property<string>("SaHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("SaID");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("OrID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Sale", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSaleDetail", b =>
                {
                    b.Property<int>("SaDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SaDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaDetailID"));

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.Property<int>("SaID")
                        .HasColumnType("int")
                        .HasColumnName("SaID");

                    b.Property<decimal>("SaPrTotalPrice")
                        .HasColumnType("decimal(10, 0)");

                    b.Property<int>("SaQuantity")
                        .HasColumnType("int");

                    b.HasKey("SaDetailID");

                    b.HasIndex("PrID");

                    b.HasIndex("SaID");

                    b.ToTable("T_SaleDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TShipment", b =>
                {
                    b.Property<int>("ShID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShID"));

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int?>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<DateTime?>("ShFinishDate")
                        .HasColumnType("date");

                    b.Property<int>("ShFlag")
                        .HasColumnType("int");

                    b.Property<string>("ShHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShStateFlag")
                        .HasColumnType("int");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.HasKey("ShID");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("OrID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Shipment", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TShipmentDetail", b =>
                {
                    b.Property<int>("ShDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShDetailID"));

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.Property<int>("ShID")
                        .HasColumnType("int")
                        .HasColumnName("ShID");

                    b.Property<int>("ShQuantity")
                        .HasColumnType("int");

                    b.HasKey("ShDetailID");

                    b.HasIndex("PrID");

                    b.HasIndex("ShID");

                    b.ToTable("T_ShipmentDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TStock", b =>
                {
                    b.Property<int>("StID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StID"));

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.Property<int>("StFlag")
                        .HasColumnType("int");

                    b.Property<int>("StQuantity")
                        .HasColumnType("int");

                    b.HasKey("StID")
                        .HasName("PK__T_Stock__C33CEFE204B2DFA6");

                    b.HasIndex("PrID");

                    b.ToTable("T_Stock", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSyukko", b =>
                {
                    b.Property<int>("SyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SyID"));

                    b.Property<int>("ClID")
                        .HasColumnType("int")
                        .HasColumnName("ClID");

                    b.Property<int?>("EmID")
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("OrID")
                        .HasColumnType("int")
                        .HasColumnName("OrID");

                    b.Property<int>("SoID")
                        .HasColumnType("int")
                        .HasColumnName("SoID");

                    b.Property<DateTime?>("SyDate")
                        .HasColumnType("date");

                    b.Property<int>("SyFlag")
                        .HasColumnType("int");

                    b.Property<string>("SyHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SyStateFlag")
                        .HasColumnType("int");

                    b.HasKey("SyID");

                    b.HasIndex("ClID");

                    b.HasIndex("EmID");

                    b.HasIndex("OrID");

                    b.HasIndex("SoID");

                    b.ToTable("T_Syukko", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSyukkoDetail", b =>
                {
                    b.Property<int>("SyDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SyDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SyDetailID"));

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.Property<int>("SyID")
                        .HasColumnType("int")
                        .HasColumnName("SyID");

                    b.Property<int>("SyQuantity")
                        .HasColumnType("int");

                    b.HasKey("SyDetailID");

                    b.HasIndex("PrID");

                    b.HasIndex("SyID");

                    b.ToTable("T_SyukkoDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TWarehousing", b =>
                {
                    b.Property<int>("WaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WaID"));

                    b.Property<int?>("EmID")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("EmID");

                    b.Property<int>("HaID")
                        .HasColumnType("int")
                        .HasColumnName("HaID");

                    b.Property<DateTime>("WaDate")
                        .HasColumnType("date");

                    b.Property<int>("WaFlag")
                        .HasColumnType("int");

                    b.Property<string>("WaHidden")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WaShelfFlag")
                        .HasColumnType("int");

                    b.HasKey("WaID");

                    b.HasIndex("EmID");

                    b.HasIndex("HaID");

                    b.ToTable("T_Warehousing", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.TWarehousingDetail", b =>
                {
                    b.Property<int>("WaDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WaDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WaDetailID"));

                    b.Property<int>("PrID")
                        .HasColumnType("int")
                        .HasColumnName("PrID");

                    b.Property<int>("WaID")
                        .HasColumnType("int")
                        .HasColumnName("WaID");

                    b.Property<int>("WaQuantity")
                        .HasColumnType("int");

                    b.HasKey("WaDetailID");

                    b.HasIndex("PrID");

                    b.HasIndex("WaID");

                    b.ToTable("T_WarehousingDetail", (string)null);
                });

            modelBuilder.Entity("SalesManagement_SysDev.Entity.LoginHistoryLogDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.Entity.LoginHistoryLog", "LoginHistoryLog")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoginHistoryLog");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MClient", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("MClients")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_M_Client_ToM_SalesOffice");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MEmployee", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MPosition", "Po")
                        .WithMany("MEmployees")
                        .HasForeignKey("PoID")
                        .IsRequired()
                        .HasConstraintName("FK_M_Employee_ToM_Position");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("MEmployees")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_M_Employee_ToM_SalesOffice");

                    b.Navigation("Po");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MProduct", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MMaker", "Ma")
                        .WithMany("MProducts")
                        .HasForeignKey("MaID")
                        .IsRequired()
                        .HasConstraintName("FK_M_Product_ToM_Maker");

                    b.HasOne("SalesManagement_SysDev.MSmallClassification", "Sc")
                        .WithMany("MProducts")
                        .HasForeignKey("ScID")
                        .IsRequired()
                        .HasConstraintName("FK_M_Product_ToM_SmallClassification");

                    b.Navigation("Ma");

                    b.Navigation("Sc");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MSmallClassification", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MMajorClassification", "Mc")
                        .WithMany("MSmallClassifications")
                        .HasForeignKey("McID")
                        .IsRequired()
                        .HasConstraintName("FK_M_SmallClassification_ToM_MajorClassification");

                    b.Navigation("Mc");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TArrival", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TArrivals")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Arrival_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TArrivals")
                        .HasForeignKey("EmID")
                        .HasConstraintName("FK_T_Arrival_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TArrivals")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Arrival_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TArrivals")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Arrival_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("Or");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TArrivalDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.TArrival", "Ar")
                        .WithMany("TArrivalDetails")
                        .HasForeignKey("ArID")
                        .HasConstraintName("FK_T_ArrivalDetail_ToT_Arrival");

                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TArrivalDetails")
                        .HasForeignKey("PrID")
                        .HasConstraintName("FK_T_ArrivalDetail_ToM_Product");

                    b.Navigation("Ar");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TChumon", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TChumons")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Chumon_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TChumons")
                        .HasForeignKey("EmID")
                        .HasConstraintName("FK_T_Chumon_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TChumons")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Chumon_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TChumons")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Chumon_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("Or");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TChumonDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.TChumon", "Ch")
                        .WithMany("TChumonDetails")
                        .HasForeignKey("ChID")
                        .IsRequired()
                        .HasConstraintName("FK_T_ChumonDetail_ToT_Chumon");

                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TChumonDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_ChumonDetail_ToM_Product");

                    b.Navigation("Ch");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("SalesManagement_SysDev.THattyu", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("THattyus")
                        .HasForeignKey("EmID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Hattyu_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.MMaker", "Ma")
                        .WithMany("THattyus")
                        .HasForeignKey("MaID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Hattyu_ToM_Maker");

                    b.Navigation("Em");

                    b.Navigation("Ma");
                });

            modelBuilder.Entity("SalesManagement_SysDev.THattyuDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.THattyu", "Ha")
                        .WithMany("THattyuDetails")
                        .HasForeignKey("HaID")
                        .IsRequired()
                        .HasConstraintName("FK_T_HattyuDetail_ToT_Hattyu");

                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("THattyuDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_HattyuDetail_ToM_Product");

                    b.Navigation("Ha");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TOrder", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TOrders")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Order_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TOrders")
                        .HasForeignKey("EmID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Order_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TOrders")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Order_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TOrderDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TOrderDetails")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_OrderDetail_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TOrderDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_OrderDetail_ToM_Product");

                    b.Navigation("Or");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSale", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TSales")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Sale_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TSales")
                        .HasForeignKey("EmID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Sale_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TSales")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Sale_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TSales")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Sale_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("Or");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSaleDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TSaleDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_SaleDetail_ToM_Product");

                    b.HasOne("SalesManagement_SysDev.TSale", "Sa")
                        .WithMany("TSaleDetails")
                        .HasForeignKey("SaID")
                        .IsRequired()
                        .HasConstraintName("FK_T_SaleDetail_ToT_Sale");

                    b.Navigation("Pr");

                    b.Navigation("Sa");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TShipment", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TShipments")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Shipment_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TShipments")
                        .HasForeignKey("EmID")
                        .HasConstraintName("FK_T_Shipment_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TShipments")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Shipment_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TShipments")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Shipment_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("Or");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TShipmentDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TShipmentDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_ShipmentDetail_ToM_Product");

                    b.HasOne("SalesManagement_SysDev.TShipment", "Sh")
                        .WithMany("TShipmentDetails")
                        .HasForeignKey("ShID")
                        .IsRequired()
                        .HasConstraintName("FK_T_ShipmentDetail_ToT_Shipment");

                    b.Navigation("Pr");

                    b.Navigation("Sh");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TStock", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TStocks")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Stock_ToM_Product");

                    b.Navigation("Pr");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSyukko", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MClient", "Cl")
                        .WithMany("TSyukkos")
                        .HasForeignKey("ClID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Syukko_ToM_Client");

                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TSyukkos")
                        .HasForeignKey("EmID")
                        .HasConstraintName("FK_T_Syukko_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.TOrder", "Or")
                        .WithMany("TSyukkos")
                        .HasForeignKey("OrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Syukko_ToT_Order");

                    b.HasOne("SalesManagement_SysDev.MSalesOffice", "So")
                        .WithMany("TSyukkos")
                        .HasForeignKey("SoID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Syukko_ToM_SalesOffice");

                    b.Navigation("Cl");

                    b.Navigation("Em");

                    b.Navigation("Or");

                    b.Navigation("So");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSyukkoDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TSyukkoDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_SyukkoDetail_ToM_Product");

                    b.HasOne("SalesManagement_SysDev.TSyukko", "Sy")
                        .WithMany("TSyukkoDetails")
                        .HasForeignKey("SyID")
                        .IsRequired()
                        .HasConstraintName("FK_T_SyukkoDetail_ToT_Syukko");

                    b.Navigation("Pr");

                    b.Navigation("Sy");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TWarehousing", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MEmployee", "Em")
                        .WithMany("TWarehousings")
                        .HasForeignKey("EmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_T_Warehousing_ToM_Employee");

                    b.HasOne("SalesManagement_SysDev.THattyu", "Ha")
                        .WithMany("TWarehousings")
                        .HasForeignKey("HaID")
                        .IsRequired()
                        .HasConstraintName("FK_T_Warehousing_ToT_Hattyu");

                    b.Navigation("Em");

                    b.Navigation("Ha");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TWarehousingDetail", b =>
                {
                    b.HasOne("SalesManagement_SysDev.MProduct", "Pr")
                        .WithMany("TWarehousingDetails")
                        .HasForeignKey("PrID")
                        .IsRequired()
                        .HasConstraintName("FK_T_WarehousingDetail_ToM_Product");

                    b.HasOne("SalesManagement_SysDev.TWarehousing", "Wa")
                        .WithMany("TWarehousingDetails")
                        .HasForeignKey("WaID")
                        .IsRequired()
                        .HasConstraintName("FK_T_WarehousingDetail_ToT_Warehousing");

                    b.Navigation("Pr");

                    b.Navigation("Wa");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MClient", b =>
                {
                    b.Navigation("TArrivals");

                    b.Navigation("TChumons");

                    b.Navigation("TOrders");

                    b.Navigation("TSales");

                    b.Navigation("TShipments");

                    b.Navigation("TSyukkos");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MEmployee", b =>
                {
                    b.Navigation("TArrivals");

                    b.Navigation("TChumons");

                    b.Navigation("THattyus");

                    b.Navigation("TOrders");

                    b.Navigation("TSales");

                    b.Navigation("TShipments");

                    b.Navigation("TSyukkos");

                    b.Navigation("TWarehousings");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MMajorClassification", b =>
                {
                    b.Navigation("MSmallClassifications");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MMaker", b =>
                {
                    b.Navigation("MProducts");

                    b.Navigation("THattyus");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MPosition", b =>
                {
                    b.Navigation("MEmployees");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MProduct", b =>
                {
                    b.Navigation("TArrivalDetails");

                    b.Navigation("TChumonDetails");

                    b.Navigation("THattyuDetails");

                    b.Navigation("TOrderDetails");

                    b.Navigation("TSaleDetails");

                    b.Navigation("TShipmentDetails");

                    b.Navigation("TStocks");

                    b.Navigation("TSyukkoDetails");

                    b.Navigation("TWarehousingDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MSalesOffice", b =>
                {
                    b.Navigation("MClients");

                    b.Navigation("MEmployees");

                    b.Navigation("TArrivals");

                    b.Navigation("TChumons");

                    b.Navigation("TOrders");

                    b.Navigation("TSales");

                    b.Navigation("TShipments");

                    b.Navigation("TSyukkos");
                });

            modelBuilder.Entity("SalesManagement_SysDev.MSmallClassification", b =>
                {
                    b.Navigation("MProducts");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TArrival", b =>
                {
                    b.Navigation("TArrivalDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TChumon", b =>
                {
                    b.Navigation("TChumonDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.THattyu", b =>
                {
                    b.Navigation("THattyuDetails");

                    b.Navigation("TWarehousings");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TOrder", b =>
                {
                    b.Navigation("TArrivals");

                    b.Navigation("TChumons");

                    b.Navigation("TOrderDetails");

                    b.Navigation("TSales");

                    b.Navigation("TShipments");

                    b.Navigation("TSyukkos");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSale", b =>
                {
                    b.Navigation("TSaleDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TShipment", b =>
                {
                    b.Navigation("TShipmentDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TSyukko", b =>
                {
                    b.Navigation("TSyukkoDetails");
                });

            modelBuilder.Entity("SalesManagement_SysDev.TWarehousing", b =>
                {
                    b.Navigation("TWarehousingDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
